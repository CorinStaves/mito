package de.tum.bgu.msm.data;

import org.apache.log4j.Logger;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

/**
 * Manages trip objects for the Microsimulation Transport Orchestrator (MITO)
 * @author Rolf Moeckel
 * Created on Mar 26, 2017 in Munich, Germany
 *
 */

public class TripDataManager {
    static Logger logger = Logger.getLogger(TripDataManager.class);
    private static int highestTripIdInUse;
    private Map<Integer, MitoTrip> trips;


    public TripDataManager() {
        trips = new HashMap<>();
        highestTripIdInUse = 0;
    }


    public void setHighestTripIdInUse () {
        // identify highest trip ID in use
        highestTripIdInUse = 0;
        for (MitoTrip trip: trips.values()) {
            highestTripIdInUse = Math.max(highestTripIdInUse, trip.getTripId());
        }
    }


    public static int getNextTripId () {
        // increase highestTripIdInUse by 1 and return value
        highestTripIdInUse++;
        return highestTripIdInUse;
    }


    public int getTotalNumberOfTripsGeneratedByPurpose (int purpose) {
        // sum up trips generated by purpose

        int prodSum = 0;
        for (MitoTrip trip: trips.values()) {
            // todo: Remove this try-catch statement once we are sure this error does not occur anymore
            try {
                if (trip.getTripPurpose() == purpose) {
                    prodSum++;
                }
            } catch (Exception e) {
                System.out.println("Purpose "+purpose);
                System.out.println("Trips   "+ trips.size());
                System.out.println(trip.getTripId());
                System.out.println(trip.getTripOrigin());
                System.out.println(trip.getTripPurpose());
                System.out.println(e);
            }
        }
        return prodSum;
    }


    public int getTotalNumberOfTripsGeneratedByPurposeByHousehold (int purpose, MitoHousehold hh) {
        // sum up trips generated by purpose

        int prodSum = 0;
        for (MitoTrip trip: hh.getTrips()) {
            // todo: Remove this try-catch statement once we are sure this error does not occur anymore
            try {
                if (trip.getTripPurpose() == purpose) prodSum++;
            } catch (Exception e) {
                System.out.println("Purpose "+purpose);
                System.out.println("Trips   "+ trips.size());
                System.out.println(trip.getTripId());
                System.out.println(trip.getTripOrigin());
                System.out.println(trip.getTripPurpose());
                System.out.println(e);
            }
        }
        return prodSum;
    }


    public int getTotalNumberOfTrips() {
        return trips.size();
    }

    public Map<Integer,MitoTrip> getTrips() {
        return trips;
    }

    public void addTrip(MitoTrip trip) {
        this.trips.put(trip.getTripId(), trip);
    }
}
