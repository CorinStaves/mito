if(purpose == "Total") {
    intercept = 4.562;
    femalesParam = 0;
    childrenParam = 0
    youngAdultsParam = 0.071;
    retireesParam = -0.032;
    workersParam = 0.057;
    studentsParam = 0.026;
    carsParam = 0;
    licensesParam = -0.035;
    incomeParam = 0;
    wbScale = 0.566;
    hbwParam = 0.038;
    hbsParam = 0.029;
    hboParam = 0.047;
    hbeParam = 0.012;
    nhbwParam = 0.052;
    nhboParam = 0.051;

    if(householdSize == 2) {
        householdSizeParam= 0.404;
    } else if(householdSize == 3) {
        householdSizeParam = 0.591;
    } else if(householdSize == 4) {
        householdSizeParam = 0.623;
    } else if(householdSize >4) {
        householdSizeParam = 0.721;
    } else {
        householdSizeParam = 0;
    }

    if(areaType == 2) {
        area = -0.078;
    } else if(areaType == 3) {
        area = -0.095;
    } else {
        area = 0;
    }
} else if(purpose == "HBO") {
    intercept = 3.645;
    femalesParam = -0.035;
    childrenParam = -0.049;
    youngAdultsParam = 0.054;
    retireesParam = 0;
    workersParam = 0;
    studentsParam = 0;
    carsParam = 0;
    licensesParam = 0;
    incomeParam = 21;
    wbScale = 0.808;
    hbwParam = -0.123;
    hbsParam = -0.054;
    hboParam = 0.151;
    hbeParam = -0.075;
    nhbwParam = -0.045;
    nhboParam = -0.025;

    if(householdSize == 2) {
        householdSizeParam= 0.401;
    } else if(householdSize == 3) {
        householdSizeParam = 0.681;
    } else if(householdSize == 4) {
        householdSizeParam = 0.782;
    } else if(householdSize >4) {
        householdSizeParam = 0.993;
    } else {
        householdSizeParam = 0;
    }
    area = 0;
} else if(purpose == "HBS") {
      intercept = 2.915;
      femalesParam = 0.049;
      childrenParam = -0.086;
      youngAdultsParam = 0;
      retireesParam = 0;
      workersParam = 0;
      studentsParam = 0;
      carsParam = 0;
      licensesParam = -0.065;
      incomeParam = 37.84;
      wbScale = 0.756;
      hbwParam = -0.051;
      hbsParam = 0.285;
      hboParam = -0.019;
      hbeParam = -0.037;
      nhbwParam = 0;
      nhboParam = 0;

      if(householdSize == 2) {
          householdSizeParam= 0.191;
      } else if(householdSize == 3) {
          householdSizeParam = 0.325;
      } else if(householdSize == 4) {
          householdSizeParam = 0.439;
      } else if(householdSize >4) {
          householdSizeParam = 0.542;
      } else {
          householdSizeParam = 0;
      }

      if(areaType == 2) {
           area = -0.062;
      } else {
           area = 0;
      }
} else if(purpose == "NHBW") {
      intercept = 3.248;
      femalesParam = 0;
      childrenParam = 0;
      youngAdultsParam = 0.115;
      retireesParam = 0.096;
      workersParam = 0.221;
      studentsParam = 0.082;
      carsParam = 0.035;
      licensesParam = -0.068;
      incomeParam = 0;
      wbScale = 0.721;
      hbwParam = -0.126;
      hbsParam = -0.024;
      hboParam = -0.017;
      hbeParam = -0.023;
      nhbwParam = 0.249;
      nhboParam = -0.017;

      if(householdSize == 2) {
          householdSizeParam= 0;
      } else if(householdSize == 3) {
          householdSizeParam = 0.077;
      } else if(householdSize == 4) {
          householdSizeParam = 0;
      } else if(householdSize >4) {
          householdSizeParam = 0;
      } else {
          householdSizeParam = 0;
      }

      if(areaType == 2) {
           area = 0.091;
      } else if(areaType == 3) {
           area = 0.147;
      } else {
      area = 0;
      }
} else if(purpose == "NHBO") {
      intercept = 2.953;
      femalesParam = 0;
      childrenParam = 0.177;
      youngAdultsParam = 0.181;
      retireesParam = 0.0;
      workersParam = 0.068;
      studentsParam = 0;
      carsParam = 0.049;
      licensesParam = 0;
      incomeParam = 43.91;
      wbScale = 0.721;
      hbwParam = -0.088;
      hbsParam = -0.037;
      hboParam = -0.019;
      hbeParam = -0.062;
      nhbwParam = 0.038;
      nhboParam = -0.229;

      if(householdSize == 2) {
           householdSizeParam= 0.199;
      } else if(householdSize == 3) {
           householdSizeParam = 0.177;
      } else if(householdSize == 4) {
           householdSizeParam = 0.105;
      } else if(householdSize >4) {
           householdSizeParam = 0;
      } else {
           householdSizeParam = 0;
      }

      if(areaType == 2) {
           area = -0.078;
      } else if(areaType == 3) {
           area = -0.095;
      } else {
           area = 0;
      }
} else {
      throw "Undefined purpose given!"
}


incomeScale = -0.5;
scaledIncome = Math.pow(income, incomeScale);
incomeImpact = scaledIncome * incomeParam;
femalesImpact = females * femalesParam;
childrenImpact = children * childrenParam;
youngAdultsImpact = youngAdults * youngAdultsParam;
retireesImpact = retirees * retireesParam;
workersImpact = workers * workersParam;
studentsImpact = students * studentsParam;
carsImpact = cars * carsParam;
licensesImpact = licenses * licensesParam;
hbwImpact = HBW * hbwParam;
hbeImpact = HBE * hbeParam;
hbsImpact = HBS * hbsParam;
hboImpact = HBO * hboParam;
nhbwImpact = NHBW * nhbwParam;
nhboImpact = NHBO * nhboParam;


utility = 0;

if(log) {
print("_______________________________________________")
print("Household " + hhId + " | Purpose " + purpose);

print("Intercept            = " + intercept);
utility += intercept;
print("Utility              = " + utility);
print("***");

print("scaledIncome         = Math.pow(income, incomeScale)");
print("scaledIncome         = Math.pow(" + income + ", " + incomeScale+ ")");
print("scaledIncome         = " + scaledIncome)
print("Income Impact        = scaledIncome * incomeParam");
print("Income Impact        = " + scaledIncome + " * " + incomeParam);
print("Income Impact        = " + incomeImpact);
utility += incomeImpact;
print("Utility              = " + utility);
print("***");

print("Householdsize        = " + householdSize);
print("Householdsize Impact = " + householdSizeParam);
utility += householdSizeParam;
print("Utility              = " + utility);
print("***");

print("Area Type            = " + areaType);
print("Area Type Impact     = " + area);
utility += area;
print("Utility              = " + utility);
print("***");

print("Females Impact       = females * femalesParam");
print("Females Impact       = " + females +" * "+ femalesParam);
print("Females Impact       = " + femalesImpact);
utility += femalesImpact;
print("Utility              = " + utility);
print("***");

print("Children Impact      = children * childrenParam");
print("Children Impact      = " + children +" * "+ childrenParam);
print("Children Impact      = " + childrenImpact);
utility += childrenImpact;
print("Utility              = " + utility);
print("***");

print("Young Adults Impact  = youngAdults * youngAdultsParam");
print("Young Adults Impact  = " + youngAdults +" * "+  youngAdultsParam);
print("Young Adults Impact  = " + youngAdultsImpact);
utility += youngAdultsImpact;
print("Utility              = " + utility);
print("***");

print("Retirees Impact      = retirees * retireesParam");
print("Retirees Impact      = " + retirees +" * "+  retireesParam);
print("Retirees Impact      = " + retireesImpact);
utility += retireesImpact;
print("Utility              = " + utility);
print("***");

print("Workers Impact       = workers * workersParam");
print("Workers Impact       = " + workers +" * "+  workersParam);
print("Workers Impact       = " + workersImpact);
utility += workersImpact;
print("Utility              = " + utility);
print("***");

print("Students Impact      = students * studentsParam");
print("Students Impact      = " + students +" * "+  studentsParam);
print("Students Impact      = " + studentsImpact);
utility += studentsImpact;
print("Utility              = " + utility);
print("***");

print("Cars Impact          = cars * carsParam");
print("Cars Impact          = " + cars +" * "+  carsParam);
print("Cars Impact          = " + carsImpact);
utility += carsImpact;
print("Utility              = " + utility);
print("***");

print("Licenses Impact      = licenses * licensesParam");
print("Licenses Impact      = " + licenses +" * "+  licensesParam);
print("Licenses Impact      = " + licensesImpact);
utility += licensesImpact;
print("Utility              = " + utility);
print("***");

print("HBW Impact           = # hbw trips * hbwParam");
print("HBW Impact           = " + HBW +" * "+  hbwParam);
print("HBW Impact           = " + hbwImpact);
utility += hbwImpact;
print("Utility              = " + utility);
print("***");

print("HBE Impact           = # hbe trips * hbeParam");
print("HBE Impact           = " + HBE +" * "+  hbeParam);
print("HBE Impact           = " + hbeImpact);
utility += hbeImpact;
print("Utility              = " + utility);
print("***");

print("HBS Impact           = # hbs trips * hbsParam");
print("HBS Impact           = " + HBS +" * "+  hbsParam);
print("HBS Impact           = " + hbsImpact);
utility += hbsImpact;
print("Utility              = " + utility);
print("***");

print("HBO Impact           = # hbo trips * hboParam");
print("HBO Impact           = " + HBO +" * "+  hboParam);
print("HBO Impact           = " + hboImpact);
utility += hboImpact;
print("Utility              = " + utility);
print("***");

print("NHBW Impact          = # nhbw trips * nhbwParam");
print("NHBW Impact          = " + NHBW +" * "+  nhbwParam);
print("NHBW Impact          = " + nhbwImpact);
utility += nhbwImpact;
print("Utility              = " + utility);
print("***");

print("NHBO Impact          = # nhbo trips * nhboParam");
print("NHBO Impact          = " + NHBO +" * "+  nhboParam);
print("NHBO Impact          = " + nhboImpact);
utility += nhboImpact;
print("Utility              = " + utility);
print("***") ;

print("Result               = Math.pow(-Math.log(0.5), 1./wbScale) * Math.exp(utility)");
print("Result               = Math.pow(-Math.log(0.5), 1./"+ wbScale +") * Math.exp("+utility+")");
result = result = Math.pow(-Math.log(0.5), 1./wbScale) * Math.exp(utility);
print("Result               = " + result);
print("_______________________________________________");
result;
} else {
utility = intercept + area + householdSizeParam + incomeImpact + femalesImpact + childrenImpact + youngAdultsImpact + retireesImpact + workersImpact + studentsImpact + carsImpact + licensesImpact + hbwImpact + hbeImpact + hbsImpact + hboImpact + nhbwImpact + nhboImpact;
result = Math.pow(-Math.log(0.5), 1./wbScale) * Math.exp(utility);
}
