var calculateHBW = function (travelTime, totalEmployees) {
    intercept = 0.3;
    travelTimeParam = -0.01;
    impedanceParam = 0.01;
    attractionParam = 0.1;

    impedanceImpact = impedanceParam * Math.exp(travelTimeParam * travelTime);

    if(totalEmployees == 0) {
        attraction = 0;
    } else {
        attraction = Math.log(totalEmployees);
    }
    attractionImpact = attraction * attractionParam;
    return intercept + impedanceImpact + attractionImpact;
}

var calculateHBE = function (travelTime, schoolEnrollment) {
    intercept = 0.3;
    travelTimeParam = -0.01;
    impedanceParam = 0.01;
    attractionParam = 0.1;
    impedanceImpact = impedanceParam * Math.exp(travelTimeParam * travelTime);

    if(schoolEnrollment == 0) {
        attraction = 0;
    } else {
        attraction = Math.log(schoolEnrollment);
    }

    attractionImpact = attraction * attractionParam;
    return intercept + impedanceImpact + attractionImpact;
}

var calculateHBS  = function (travelTime, retailEmployees) {
    intercept = 0.3;
    travelTimeParam = -0.01;
    impedanceParam = 0.01;
    attractionParam = 0.1;

    impedanceImpact = impedanceParam * Math.exp(travelTimeParam * travelTime);

    if(retailEmployees == 0) {
        attraction = 0;
    } else {
        attraction = Math.log(retailEmployees);
    }

    attractionImpact = attraction * attractionParam;
    return intercept + impedanceImpact + attractionImpact;
}

var calculateHBO = function (travelTime, households, adminEmployees, serviceEmployees) {
    intercept = 0.3;
    travelTimeParam = -0.01;
    impedanceParam = 0.01;
    attractionParam = 0.1;

    impedanceImpact = impedanceParam * Math.exp(travelTimeParam * travelTime);

    attraction = 0;
    if(households > 0) {
        attraction += Math.log(households);
    }
    if(adminEmployees > 0) {
        attraction += Math.log(adminEmployees);
    }
    if(serviceEmployees > 0) {
        attraction += Math.log(serviceEmployees);
    }
    attractionImpact = attraction * attractionParam;
    return intercept + impedanceImpact + attractionImpact;
}

var calculateNHBW = function (travelTime, households, adminEmployees, serviceEmployees, retailEmployees) {
    intercept = 0.3;
    travelTimeParam = -0.01;
    impedanceParam = 0.01;
    attractionParam = 0.1;

    impedanceImpact = impedanceParam * Math.exp(travelTimeParam * travelTime);

    attraction = 0;
    if(households > 0) {
        attraction += Math.log(households);
    }
    if(retailEmployees > 0) {
        attraction += Math.log(retailEmployees);
    }
    if(serviceEmployees > 0) {
        attraction += Math.log(serviceEmployees);
    }
    if(adminEmployees > 0) {
        attraction += Math.log(adminEmployees);
    }
    attractionImpact = attraction * attractionParam;
    return intercept + impedanceImpact + attractionImpact;
}

var calculateNHBO = function (travelTime, households, adminEmployees, serviceEmployees, retailEmployees) {
    intercept = 0.3;
    travelTimeParam = -0.01;
    impedanceParam = 0.01;
    attractionParam = 0.1;

    impedanceImpact = impedanceParam * Math.exp(travelTimeParam * travelTime);

    attraction = 0;
    if(households > 0) {
        attraction += Math.log(households);
    }
    if(retailEmployees > 0) {
        attraction += Math.log(retailEmployees);
    }
    if(serviceEmployees > 0) {
        attraction += Math.log(serviceEmployees);
    }
    if(adminEmployees > 0) {
        attraction += Math.log(adminEmployees);
    }
    attractionImpact = attraction * attractionParam;
    return intercept + impedanceImpact + attractionImpact;
}

function log() {
    logVal = 0;
    logger.debug("\n_______________________________________________" +
    "\nCalculating Utility: base zone " + baseZone + " | target zone " + targetZone + " | purpose " + purpose +
    "\nIntercept            = " + intercept +
    "\nUtility              = " + (logVal+= intercept) +
    "\n***" +
    "\nImpedance        = " + impedanceImpact +
    "\nUtility              = " + (logVal+= impedanceImpact) +
    "\n***" +
    "\nAttraction Impact    = " + attractionImpact +
    "\nUtility              = " + (logVal+=attractionImpact) +
    "\n_______________________________________________");
}
