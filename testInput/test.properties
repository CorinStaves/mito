base.directory                = ./testInput/

# Skims (only needed for stand-alone implementation)
auto.peak.sov.skim            = ./testInput/CheapJrnyTime.omx
transit.peak.time             = ./testInput/CheapJrnyTime.omx

# Zonal DataSet (only needed for stand-alone implementation)
zonal.data.file               = ./testInput/dummyZone.csv

# Synthetic Population (only needed for stand-alone implementation)
household.file.ascii          = ./testInput/households_dummy.csv
person.file.ascii             = ./testInput/persons_dummy.csv
job.file.ascii                = ./testInput/jobs_dummy.csv

# General input data
economic.status.definition    = ./testInput/economicStatusClassification.csv

# Trip generation
household.travel.survey.hh    =  travelSurveyDummy.csv
household.travel.survey.trips =  travelSurveyTripsDummy.csv
household.travel.survey.reg   = ./testInput/htsRegionsDummy.csv
trip.purposes                 = HBW,HBS,HBO,HBE,NHBW,NHBO
HBW.trip.frequencies          = ./testInput/HBWhhTypes_tripFrequencies.csv
school.enrollment.data        = ./testInput/schoolEnrollmentDummy.csv
remove.non.motorized.trips    = true
reduce.trips.at.outer.border  = true
reduction.near.outer.border   = ./testInput/TripProductionReductionAtBorderDummy.csv
trip.attraction.rates         = ./testInput/tripAttractionRates.csv

# Travel time budget coefficients

log.util.total.ttb            = true
ttb.js                        = ./testInput/TravelTimeBudgetCalc

# Trip Distribution
log.util.trip.distribution    = true

# Mode choice input
auto.travelTime 	          = ./testInput/CheapJrnyTime.omx
bus.travelTime 		          = ./testInput/CheapJrnyTime.omx
tramMetro.travelTime 	      = ./testInput/CheapJrnyTime.omx
train.travelTime 	          = ./testInput/CheapJrnyTime.omx
auto.travelDistance 	      = ./testInput/CheapJrnyTime.omx
areaTypes.distToRailStop      = ./testInput/zones_areaType_distToRailStop.csv

# Output files
non.motorized.trips           = output/nonMotorizedTrips.csv
removed.trips.near.border     = output/removedTripsNearBorder.csv
trip.production.output        = testOutput/tripProduction.csv
trip.attraction.output        = testOutput/tripAttraction.csv


# Developer properties
anal.autos.or.autosufficiency = autos
min.no.of.records.by.hh.type  = 30
#Trip purpose,Number of HH types,HH Size Segmentation,Worker Segmentation,Income Segmentation (Economic status),Auto-ownership Segmentation,Region Segmentation
hh.type.HBW                   = 20,1-8,0-0.1-1.2-2.3-4,1-1.2-2.3-3.4-4.5-5,0-8,1-4
accessibility.alpha           = 1.0
accessibility.beta            = -0.3

# Set random.seed to -1 for random order of random numbers, set to any other value same order of random numbers
random.seed                   = 1