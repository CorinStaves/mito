if(purpose == "HBW") {
    intercept = 0.3;
    timeParam = -0.01;
    impedanceParam = 0.01;
    attractionParam = 0.1;

    impedanceImpact = calculateImpedance(impedanceParam, timeParam, travelTime);
    if(totalEmployees == 0) {
        attraction = 0;
    } else {
        attraction = Math.log(totalEmployees);
    }
    attractionImpact = attraction * attractionParam;

    utility = intercept + impedanceImpact + attractionImpact;

} else if(purpose == "HBE") {
    intercept = 0.3;
    timeParam = -0.01;
    impedanceParam = 0.01;
    attractionParam = 0.1;

    impedanceImpact = calculateImpedance(impedanceParam, timeParam, travelTime);

    if(schoolEnrollment == 0) {
        attraction = 0;
    } else {
        attraction = Math.log(schoolEnrollment);
    }
    attractionImpact = attraction * attractionParam;

    utility = intercept + impedanceImpact + attractionImpact;

} else if(purpose == "HBS") {
    intercept = 0.3;
    budgetParam = -0.01;
    impedanceParam = 0.01;
    attractionParam = 0.1;

    impedanceImpact = calculateImpedance(impedanceParam, budgetParam, travelTime);

    if(retailEmployees == 0) {
        attraction = 0;
    } else {
        attraction = Math.log(retailEmployees);
    }
    attractionImpact = attraction * attractionParam;

    utility = intercept + impedanceImpact + attractionImpact;

} else if(purpose == "HBO") {
    intercept = 0.3;
    budgetParam = -0.01;
    impedanceParam = 0.01;
    attractionParam = 0.1;

    impedanceImpact = calculateImpedance(impedanceParam, budgetParam, travelTime);

    if(households == 0) {
        householdsAttraction = 0;
    } else {
        householdsAttraction = Math.log(households);
    }
    if(otherEmployees == 0) {
        otherEmplAttraction = 0;
    } else {
        otherEmplAttraction =  Math.log(otherEmployees);
    }
    attraction = householdsAttraction + otherEmplAttraction;
    attractionImpact = attraction * attractionParam;


    utility = intercept + impedanceImpact + attractionImpact;

} else if(purpose == "NHBW") {
    intercept = 0.3;
    budgetParam = -0.01;
    impedanceParam = 0.01;
    attractionParam = 0.1;

    impedanceImpact = calculateImpedance(impedanceParam, budgetParam, travelTime);

    if(households == 0) {
        householdsAttraction = 0;
    } else {
        householdsAttraction = Math.log(households);
    }
    if(totalEmployees == 0) {
        totalEmplAttraction = 0;
    } else {
        totalEmplAttraction =  Math.log(totalEmployees);
    }
    if(retailEmployees == 0) {
        retailEmplAttraction = 0;
    } else {
        retailEmplAttraction =  Math.log(retailEmployees);
    }
    attraction = householdsAttraction + totalEmplAttraction + retailEmplAttraction;
    attractionImpact = attraction * attractionParam;

    utility = intercept + impedanceImpact + attractionImpact;

} else if(purpose == "NHBO") {
    intercept = 0.3;
    budgetParam = -0.01;
    impedanceParam = 0.01;
    attractionParam = 0.1;

    impedanceImpact = calculateImpedance(impedanceParam, budgetParam, travelTime);

    if(households == 0) {
        householdsAttraction = 0;
    } else {
        householdsAttraction = Math.log(households);
    }
    if(totalEmployees == 0) {
        totalEmplAttraction = 0;
    } else {
        totalEmplAttraction =  Math.log(totalEmployees);
    }
    if(retailEmployees == 0) {
        retailEmplAttraction = 0;
    } else {
        retailEmplAttraction =  Math.log(retailEmployees);
    }
    attraction = householdsAttraction + totalEmplAttraction + retailEmplAttraction;
    attractionImpact = attraction * attractionParam;

    utility = intercept + impedanceImpact + attractionImpact;
} else {
    0.;
}

function calculateImpedance(impedanceParameter, timeParameter, time) {
    return impedanceParameter * Math.exp(timeParameter * time);
}

function log() {
    logVal = 0;
    logger.debug("\n_______________________________________________" +
    "\nCalculating Utility: base zone " + baseZone + " | target zone " + targetZone + " | purpose " + purpose +
    "\nIntercept            = " + intercept +
    "\nUtility              = " + (logVal+= intercept) +
    "\n***" +
    "\nImpedance        = " + impedanceImpact +
    "\nUtility              = " + (logVal+= impedanceImpact) +
    "\n***" +
    "\nAttraction Impact    = " + attractionImpact +
    "\nUtility              = " + (logVal+=attractionImpact) +
    "\n_______________________________________________");
}