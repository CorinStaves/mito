travelDistanceParamHbs = -0.0000235;
impedanceParamHbs = 18.4;
attractionParamHbs = 0.55;

travelDistanceParamHbo = -0.000014;
impedanceParamHbo = 10.3;
attractionParamHbo = 1.3;

travelDistanceParamHbw = -0.000011;
impedanceParamHbw = 9;
attractionParamHbw = 1.2;

travelDistanceParamHbe = -0.00001;
impedanceParamHbe = 9;
attractionParamHbe = 0.9;

travelDistanceParamNhbw = -0.00002;
impedanceParamNhbw = 11.3;
attractionParamNhbw = 0.7;

travelDistanceParamNhbo = -0.00002;
impedanceParamNhbo = 11.5;
attractionParamNhbo = 0.6;


var calculateHBW = function (travelDistance, totalEmployees) {
    impedanceImpact = impedanceParamHbw * Math.exp(travelDistanceParamHbw * travelDistance);

    if(totalEmployees == 0) {
        attraction = 0;
    } else {
        attraction = Math.log(totalEmployees);
    }
    attractionImpact = attraction * attractionParamHbw;
    return Math.exp(impedanceImpact + attractionImpact);
}

var calculateHBE = function (travelDistance, schoolEnrollment) {
    impedanceImpact = impedanceParamHbe * Math.exp(travelDistanceParamHbe * travelDistance);

    if(schoolEnrollment == 0) {
        attraction = 0;
    } else {
        attraction = Math.log(schoolEnrollment);
    }

    attractionImpact = attraction * attractionParamHbe;
    return Math.exp(impedanceImpact + attractionImpact);
}

var calculateHBS  = function (travelDistance, retailEmployees) {
    impedanceImpact = impedanceParamHbs * Math.exp(travelDistanceParamHbs * travelDistance);
    if(retailEmployees == 0) {
        attractionImpact = 0;
    } else {
        attractionImpact = Math.log(retailEmployees) * attractionParamHbs;
    }
    return Math.exp(impedanceImpact + attractionImpact);
}

var calculateHBO = function (travelDistance, households, adminEmployees, serviceEmployees) {
    impedanceImpact = impedanceParamHbo * Math.exp(travelDistanceParamHbo * travelDistance);
    attraction = 0;
    if(households > 0) {
        attraction += Math.log(households);
    }
    if(adminEmployees > 0) {
        attraction += Math.log(adminEmployees);
    }
    if(serviceEmployees > 0) {
        attraction += Math.log(serviceEmployees);
    }
    attractionImpact = attraction * attractionParamHbo;
    return Math.exp(impedanceImpact + attractionImpact);
}

var calculateNHBW = function (travelDistance, households, adminEmployees, serviceEmployees, retailEmployees) {
    impedanceImpact = impedanceParamNhbw * Math.exp(travelDistanceParamNhbw * travelDistance);

    attraction = 0;
    if(households > 0) {
        attraction += Math.log(households);
    }
    if(retailEmployees > 0) {
        attraction += Math.log(retailEmployees);
    }
    if(serviceEmployees > 0) {
        attraction += Math.log(serviceEmployees);
    }
    if(adminEmployees > 0) {
        attraction += Math.log(adminEmployees);
    }
    attractionImpact = attraction * attractionParamNhbw;
    return Math.exp(impedanceImpact + attractionImpact);
}

var calculateNHBO = function (travelDistance, households, adminEmployees, serviceEmployees, retailEmployees) {
    impedanceImpact = impedanceParamNhbo * Math.exp(travelDistanceParamNhbo * travelDistance);

    attraction = 0;
    if(households > 0) {
        attraction += Math.log(households);
    }
    if(retailEmployees > 0) {
        attraction += Math.log(retailEmployees);
    }
    if(serviceEmployees > 0) {
        attraction += Math.log(serviceEmployees);
    }
    if(adminEmployees > 0) {
        attraction += Math.log(adminEmployees);
    }
    attractionImpact = attraction * attractionParamNhbo;
    return Math.exp(impedanceImpact + attractionImpact);
}

function log() {
    logVal = 0;
    logger.debug("\n_______________________________________________" +
    "\nCalculating Utility: base zone " + baseZone + " | target zone " + targetZone + " | purpose " + purpose +
    "\nIntercept            = " + intercept +
    "\nUtility              = " + (logVal+= intercept) +
    "\n***" +
    "\nImpedance        = " + impedanceImpact +
    "\nUtility              = " + (logVal+= impedanceImpact) +
    "\n***" +
    "\nAttraction Impact    = " + attractionImpact +
    "\nUtility              = " + (logVal+=attractionImpact) +
    "\n_______________________________________________");
}
